---
/**
 * Blog Post page body, It take a blogpost and it parses it, processing it
 * to fix links (iframes from youtube for example), display images and author/post meta info.
 * It also adds a "reccomended" section in the end of the post with links to other posts
 */

import BlogPicture from './BlogPicture.astro';
import PlainImagePost from './PlainImagePost.astro';
import OptimizedPicture from './OptimizedPicture.astro';
import { parse } from 'node-html-parser';
import axios from 'axios';

export interface Props {
	title: string;
	author: string;
	publishDate: string;
	heroImage: string;
	alt: string;
	text: string;
	tags: any[];
}

const { title, author, tags, publishDate, heroImage, alt, text, id } =
	Astro.props;

const parsed_post = parse(text);
function addIframeClasses(node) {
	node.classList.add('outline-none');
	node.classList.add('w-full');
}

let recommended = [];

try {
	let resp = await axios(
		'http://N33J498LJ3-dsn.algolia.net/1/indexes/*/recommendations',
		{
			method: 'POST',
			headers: {
				'Content-Type': 'application/json',
				'X-Algolia-Api-Key': import.meta.env.ALGOLIA_KEY,
				'X-Algolia-Application-ID': import.meta.env.ALGOLIA_APPLICATION,
			},
			data: {
				requests: [
					{
						indexName: 'dev_mpompina',
						model: 'related-products',
						objectID: id.toString(),
						threshold: 0,
						maxRecommendations: 4,
					},
				],
			},
		}
	);

	let rec = resp.data;
	recommended = rec?.results?.[0]?.hits?.map((r) => ({
		title: r.title,
		id: r.objectID,
		slug: r.slug,
		image: r.image,
	}));
} catch (error) {
	console.error(error);
}

// recommended = [
// 	{
// 		title: 'Ιαπωνικός Κινηματογράφος: ‘‘Like grains of sand’’',
// 		image: 'https://mpompina.files.wordpress.com/2022/06/maxresdefault-2.jpg',
// 		id: '1630',
// 	},
// 	{
// 		title: 'Ιαπωνικός Κινηματογράφος: ‘‘Like grains of sand’’',
// 		image: 'https://mpompina.files.wordpress.com/2022/06/maxresdefault-2.jpg',
// 		id: '1630',
// 	},
// ];

// remove first image since it's the hero image:
parsed_post.getElementsByTagName('img')[0]?.remove();

let processed_post = parsed_post.childNodes.map((v) => {
	if (v == null) return;

	if (v.tagName != null) {
		v.classList.add('my-4');
		v.classList.add('mx-auto');
		v.classList.add('md:max-w-[750px]');
	}

	if (v.childNodes.length > 0) {
		if (v.tagName === 'IMG' || v.querySelector('img') != null) {
			return v.tagName === 'IMG' ? v : v.querySelector('img');
		} else if (v.tagName === 'IFRAME' || v.querySelector('iframe')) {
			// addIframeClasses(
			// 	v.tagName === 'IFRAME' ? v : v.querySelector('iframe')
			// );
		}
	}

	return v;
});
---

<div class="layout mb-20 mx-auto">
	<article class="px-5">
		<div>
			<header class="md:max-w-[750px] mx-auto">
				{
					heroImage && (
						<a href={heroImage}>
							<OptimizedPicture
								class="object-cover max-w-full "
								loading="lazy"
								src={heroImage}
								alt={alt}
							/>
						</a>
					)
				}
				<h1 class="title-large mb-4 mt-5">{title}</h1>
			</header>

			<main class="text-body">
				{
					processed_post.map((v) => {
						if (v.tagName == 'IMG') {
							return (
								<BlogPicture
									src={v.getAttribute('data-orig-file')}
									alt={v.getAttribute('alt')}
									title={v.getAttribute('data-image-title')}
									height={v.getAttribute('height')}
									class="my-4 md:max-w-xl md:mx-auto"
								/>
							);
						}

						return v;
					})
				}
			</main>

			<p class="md:max-w-[750px] mx-auto text-body italic">
				Δημοσιεύθηκε στις {
					new Date(publishDate).toLocaleDateString('el-gr')
				}
			</p>
			<p class="md:max-w-[750px] mx-auto text-body mt-2">
				<span class="mr-1" style="font-weight: 400">TAGS</span>
				/ {
					Object.keys(tags).length > 0 &&
					Object.values(tags).map((t) => (
						<>
							<a href={'/tags/' + t.slug}>{t.name}</a> /
						</>
					))
				}
			</p>

			<div class="md:max-w-[1140px] mx-auto">
				<h5 class="mt-14 mb-10 title-medium md:text-center">
					Διαβάστε ακόμα
				</h5>
				<div class="md:flex md:justify-center">
					{
						recommended &&
						recommended.map((r) => {
							return (
								<PlainImagePost
									title={r.title}
									image={r.image}
									href={'/posts/' + r.slug}
									class="mb-5 md:mx-2 md:max-w-[25%]"
								/>
							);
						})
					}
				</div>
			</div>
		</div>
	</article>
</div>
